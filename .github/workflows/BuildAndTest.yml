name: test

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [ 'netcoreapp3.1', 'net5', 'net6' ] 
         
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Install dependencies
        run: dotnet restore ./src/
      - name: Test with dotnet
        run: dotnet test ./src/ --framework ${{matrix.dotnet-version}} --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
  # publish-test-results:
  #   needs: build

  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       dotnet-version: [ '3.1.301' ]
  #        #'5.0.403',
  #        # '6.0.100' 
         
  #   if: success() || failure()
  #   steps:
  #   - name: Download Artifacts
  #     uses: actions/download-artifact@v2
  #     with:
  #       path: artifacts
  #   - name: Location
  #     run: echo $PWD
  #   - name: Publish Unit Test Results
  #     uses: EnricoMi/publish-unit-test-result-action@v1
  #     with:
  #       check_name: Unit Test Results
  #       files: artifacts/dotnet-results-${{ matrix.dotnet-version }}